VARIABILI DI SESSIONE:
error_login: (String, messaggio di errore)
            viene caricata quando dalla pagina login_script vedo che le credenziali sono errati-
            Viene stampata nella login.php solo se è settata e quindi se è stato fatto un login errato.
            Viene unset se si passa il login


logged: (Array associativo, contiene la tubla del db dell'utente loggato correttamente)
        Viene caricata nella login_script solo se sono state passate delle credenziali corrette.
        Viene mantenuta durante tutta la gestione del sito e passata di pagina in pagina per evitare di
        fare ulteriori query.
        $_SESSION["logged"]["email"] --> email
        $_SESSION["logged"]["idcarrello"] --> idcarrello
        $_SESSION["logged"]["idwlist"] --> idwlist
        $_SESSION["logged"]["username"] --> idwlist

SCRIPT JS (particolarità):
1) Spiegazione ritorno da form Signin a Login

AJAX:
login.php --> Trasferimento dati tra pagine nel modo classico, non è stato usato ajax perchè l'effetto asincrono non è necessario, il
cambiamento di pagina deve comunque avvenire.

NB:
(effects_login.php) --> Il passaggio da signin a login viene gestito come un semolice ricarimento della pagina.
Si sarebbe potutto agire nuovamente sugli oggetti andando a ricreare la form.
(effects_login.php) --> La form di signin è creata dinamicamente per evitare effetto clic&refresh e per evitare una pagina ulteriore.

NB:
(Newsletter) --> Permetto di iscriversi più volte, in tal caso la query verrà ripetuta ma nulla sarà davvero inserto
a casusa della repitezione di una chiave primaria.
NB:
(Ogni php) Gestione eccezione per possibile errore di connessione al DB
NB:
(signin_script.php) --> Per aggiornare anche la carrello e la Wlist uso numCarrelli perche vannno di pari passo.
Ad ogni aggiunta di un utente inserisco anche un Carrello e una Wlist
(signin_script.php) --> Prima di inserire un Utente devo aggiornare la Carrello e la Wishlist
(signin_script.php) --> Quando si sbaglia qualcosa nella pagina di signin, al redirect, posso sempre andare solo sulla form di login
perchè la form di signin viene fatta partire in modo statico con un click. L'errore quindi verrà visto nella login.
NB:
(addCarrello_script.php) --> Ogni volta che l'articolo viene spedito, la tupla associata viene tolta da Composti e messo in Storico (da creare)
(addCarrello_script.php) --> All'inserimento se c'è gia prodotto nel carrello allora aumento qta altrimenti faccio la insert.
NB:
(effects_details.js) --> Viene prelevato il numero del carrello da input type=hidden, evitando cosi una query.
NB:
(effects_details.js) --> La creazione dei commenti è dinamica, usato metodo wrapper per creare tanti commenti, il quale chiama
                        il metodo che si occupa della vera creazione dello slot del commento.
NB:
(shoppingcart.php) --> Vengono fatte 3 macro categorie in cui si evita il click and refrash ma si aggiorna dinamicamente
                    la pagina in base a cio che c'è in GET, permette piu fluidita.
                    Ho evitato di fare la creazione degli oggetti del DOM perchè ho notato una fluidità maggiore in fase di caricamento, quindi
                    il codice è generato da server ed è innestato nella pagina HTML.
NB:
(shoppingcart.php) --> Ridondanza di codice ma ho prefito piuttosto che importare tutto il codice della details.php
NB:
(shoppingcart.php) --> Utilizzato il click&refrash per l'eliminazione per comodità
NB:
(shoppingcart.php) --> Sono costretto a controllare il numero di tuple che tira fuori la select nel carrello perchè in caso fosse 0
                        devo ritornare null a mano.
NB:
(effects_findWlist.js) --> Si è evitato di creare dinamicamente anche gli oggetti del drag&drop per non appensantire il caricamento che
                        gia sembra caricare delle semplici foto a bassa qualità.
NB:
(effects_findWlist.js) --> Non si avviano gli effetti di "hover" sui div draggabili perchè danno problemi nel ritorno del divo una volta
                            droppato. Rimangono spesso dove gli lasci oppure ci mettono n secondi prima di ritornare alla loro posizione.
NB:
(effects_findWlist.js) --> Dentro alcune funzioni viene fatta la gestione di visibility dei paragrafi d'errore o di feedback.